name:

on: [push, pull_request]

jobs:
  test_conda:
    # Run tests using conda, which gives us bioinformatics tools installed
    runs-on: ubuntu-latest
    container: continuumio/miniconda3
    steps:
      - uses: actions/checkout@v2

      - name: apt dependencies
        run: apt-get update && apt install build-essential -y

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "2.1.x"

      - name: Tests
        run: |
          source /root/.bashrc
          conda env create
          conda activate aclimatise-test
          pip install --upgrade pip wheel setuptools
          pip install -e .[dev]
          python -m spacy download en
          pytest --tb=native --log-cli-level INFO
        shell: bash

  test_system:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip wheel setuptools
          pip install -e .[dev]
          python -m spacy download en

      - uses: pre-commit/action@v1.0.1

      - name: Test with pytest
        run: |
          pytest --tb=native

      - name: Test the documentation still builds
        run: |
          cd docs
          make html

  publish:
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: [test_system, test_conda]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Compile package
        run: |
          pip install -U wheel setuptools
          pip install -e .[dev]
          python -m spacy download en
          python setup.py sdist bdist_wheel

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}

      - name: Generate railroad diagram
        run: |
          # We need an unpublished version of PyParsing for this
          pip install -U git+https://github.com/pyparsing/pyparsing.git#egg=pyparsing[diagrams]
          acclimatise railroad > docs/_static/railroad.html

      - name: Build the documentation
        run: |
          cd docs
          make html

      - name: Deploy docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
          publish_branch: gh-pages
          enable_jekyll: false
